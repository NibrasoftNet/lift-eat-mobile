lift-eat-mobile/
├── cache.ts
├── drizzle.config.ts
├── expo-env.d.ts
├── image.d.ts
├── nativewind-env.d.ts
└── app/
    └── (root)/
        └── (auth)/
            ├── _layout.tsx
            ├── loginNew.tsx
            ├── new-password.tsx
            ├── registerNew.tsx
            ├── reset-password.tsx
            ├── verification.tsx
            ├── welcome.tsx
        └── (tabs)/
            ├── _layout.tsx
            └── analytics/
                ├── index.tsx
            └── assistant/
                ├── index.tsx
            └── meals/
                ├── _layout.tsx
                ├── search.tsx
                └── my-meals/
                    ├── _layout.tsx
                    ├── create-v2.tsx
                    ├── index.tsx
                    └── details/
                        ├── [id].tsx
                    └── edit/
                        ├── [id].tsx
                └── scanner/
                    ├── _layout.tsx
                    ├── history.tsx
                    ├── index.tsx
                    └── product/
                        ├── [code].tsx
            └── plans/
                ├── _layout.tsx
                ├── community.tsx
                ├── company.tsx
                └── my-plans/
                    ├── _layout.tsx
                    ├── index.tsx
                    └── create/
                        ├── _layout.tsx
                        ├── index.tsx
                        └── target/
                            ├── index.tsx
                            └── edit/
                                ├── [id].tsx
                    └── details/
                        ├── [id] copy.tsx
                        ├── [id].tsx
                    └── edit/
                        ├── [id].tsx
            └── progress/
                ├── index.tsx
        └── (user)/
            ├── _layout.tsx
            └── details/
                ├── _layout.tsx
                ├── index.tsx
                └── edit/
                    ├── [id].tsx
            └── preference/
                ├── _layout.tsx
                ├── index.tsx
                └── edit/
                    ├── [id].tsx
            └── profile/
                ├── [id].tsx
        ├── _layout.tsx
        └── onboarding/
            ├── _layout.tsx
            ├── onboarding-step1.tsx
            ├── onboarding-step2.tsx
            ├── onboarding-step3.tsx
            ├── onboarding-step4.tsx
            ├── onboarding-step5.tsx
            ├── splash.tsx
            ├── walkthrough1.tsx
            ├── walkthrough2.tsx
            ├── walkthrough3.tsx
    ├── +not-found.tsx
    ├── _layout.tsx
    ├── index.tsx
    ├── intro.tsx
└── assets/
    └── icons/
        ├── AppleIcon.tsx
        ├── FacebookIcon.tsx
        ├── GoogleIcon.tsx
        ├── LogoIcon.tsx
        └── figma/
            └── curved-bold/
                ├── ActivityCurvedBoldIcon.tsx
                ├── AddUserCurvedBoldIcon.tsx
                |__ ...etc
                ├── index.ts
            └── curved-broken/
                ├── ActivityCurvedBrokenIcon.tsx
                ├── AddUserCurvedBrokenIcon.tsx
                ├── ArrowDown2CurvedBrokenIcon.tsx         
                |__ ...etc
                ├── index.ts
            └── curved-bulk/
                ├── ActivityCurvedBulkIcon.tsx
                |__ ...etc
                                ├── index.ts
            └── curved-light-border/
                ├── ActivityCurvedLightBorderIcon.tsx
                |__ ...etc
                ├── index.ts
            └── curved-light-outline/
                ├── ActivityCurvedLightOutlineIcon.tsx
                |__ ...etc
                ├── index.ts
            └── curved-two-tone/
                ├── ActivityCurvedTwoToneIcon.tsx
                ├── AddUserCurvedTwoToneIcon.tsx
                |__ ...etc
                ├── index.ts
            └── regular-bold/
                ├── ActivityRegularBoldIcon.tsx
                |__ ...etc
                ├── index.ts
            └── regular-broken/
                ├── ActivityRegularBrokenIcon.tsx
                ├── AddUserRegularBrokenIcon.tsx
                |__ ...etc
                ├── index.ts
            └── regular-bulk/
                ├── ActivityRegularBulkIcon.tsx
                ├── AddUserRegularBulkIcon.tsx
                |__ ...etc
                ├── index.ts
            └── regular-light-border/
                ├── ActivityRegularLightBorderIcon.tsx
                ├── AddUserRegularLightBorderIcon.tsx
                |__ ...etc
                ├── index.ts
            └── regular-light-outline/
                ├── ActivityRegularLightOutlineIcon.tsx
                ├── AddUserRegularLightOutlineIcon.tsx
                ├── ArrowDown2RegularLightOutlineIcon.tsx
                |__ ...etc
                ├── index.ts
            └── regular-two-tone/
                ├── ActivityRegularTwotoneIcon.tsx
                ├── AddUserRegularTwotoneIcon.tsx
                ├── ArrowDown2RegularTwotoneIcon.tsx
                |__ ...etc
                ├── index.ts
            └── sharp-bold/
                ├── ActivitySharpBoldIcon.tsx
                ├── AddUserSharpBoldIcon.tsx
                ├── ArrowDown2SharpBoldIcon.tsx
                |__ ...etc
                ├── index.ts
            └── sharp-broken/
                ├── ActivitySharpBrokenIcon.tsx
                ├── AddUserSharpBrokenIcon.tsx
                ├── ArrowDown2SharpBrokenIcon.tsx
                |__ ...etc
                ├── index.ts
            └── sharp-bulk/
                ├── ActivitySharpBulkIcon.tsx
                ├── AddUserSharpBulkIcon.tsx
                ├── ArrowDown2SharpBulkIcon.tsx
                |__ ...etc
                ├── index.ts
            └── sharp-light-border/
                ├── ActivitySharpLightBorderIcon.tsx
                ├── AddUserSharpLightBorderIcon.tsx
                ├── ArrowDown2SharpLightBorderIcon.tsx
                |__ ...etc
                ├── index.ts
            └── sharp-two-tone/
                ├── ActivitySharpTwoToneIcon.tsx
                ├── AddUserSharpTwoToneIcon.tsx
                ├── ArrowDown2SharpTwoToneIcon.tsx
                |__ ...etc
                ├── index.ts
        └── fluent-emojis/
            ├── AvocadoEmoji.tsx
            ├── BananaEmoji.tsx
            ├── BarChartEmoji.tsx
            |__ ...etc
            ├── index.ts
└── components-new/
    ├── MultiPurposeToast.tsx
    ├── bmi.tsx
    └── screens/
        └── meals/
            ├── MealHeader.tsx
            ├── MealsList.tsx
            ├── MealsScreen.tsx
    └── ui/
        └── atoms/
            ├── AppLogo.tsx
            ├── AutoLayout.tsx
            ├── HomeIndicator.tsx
            ├── StepMeter.tsx
            ├── Tag.tsx
            ├── index.ts
            └── base/
                ├── Box.tsx
                ├── Text.tsx
                ├── index.ts
            └── display/
                ├── Avatar.tsx
                ├── Icon.tsx
                ├── index.ts
            └── feedback/
                ├── Alert.tsx
                ├── Badge.tsx
                ├── index.ts
            └── icons/
                ├── FemaleIcon.tsx
                ├── MaleIcon.tsx
            └── inputs/
                ├── Button.tsx
                ├── Checkbox.tsx
                ├── CircularAddButton.tsx
                ├── Input.tsx
                ├── Radio.tsx
                ├── Toggle.tsx
                ├── index.ts
            └── layout/
                ├── Divider.tsx
                ├── Grid.tsx
                ├── index.ts
            └── scan/
                ├── ScanFrame.tsx
            └── system/
                ├── CustomStatusBar.tsx
                ├── index.ts
        └── forms/
            ├── CalculateCaloriesIntakeForm.tsx
            ├── NutritionGoalForm.tsx
        └── molecules/
            └── account-list/
                ├── AccountListItem.tsx
                ├── index.ts
                ├── types.ts
            └── auth/
                ├── AuthHeader.tsx
                ├── ContinueWithDivider.tsx
                ├── DividerWithText.tsx
                ├── SocialLoginGroup.tsx
                ├── TitleAndDescription.tsx
                ├── index.ts
            └── calendar/
                ├── NutrioCalendar.tsx
            └── calorie-tracker/
                ├── CaloriesBurnedSection.tsx
                ├── DateNavigationHeader.tsx
                ├── FoodDetailsPersonal.tsx
                ├── MacronutrientDistributionBar.tsx
                ├── MainProgressCircle.tsx
                ├── TitleDivider.tsx
                ├── index.ts
            └── circular-progress/
                ├── HistoryList.tsx
                ├── index.ts
                ├── types.ts
            └── display/
                ├── Avatar.tsx
                ├── GoalsPercentage.tsx
                ├── IntroCard.tsx
                ├── NutritionCard.tsx
                ├── index.ts
            └── feedback/
                ├── Modal.tsx
                ├── index.ts
            └── filtering/
                ├── FilterChip.tsx
                ├── FilterChipGroup.tsx
                ├── FilterPanel.tsx
                ├── index.ts
            └── food-selection/
                ├── CuisineTypeFilter.tsx
                ├── FoodImagePicker.tsx
                ├── IngredientCard.tsx
                ├── MealCard.tsx
                ├── MealTypeFilter.tsx
                ├── index.ts
            └── form/
                ├── NumberInputField.tsx
                ├── TextAreaField.tsx
                ├── TextInputField.tsx
            └── forms/
                ├── InputForm.tsx
                ├── InputForm2.tsx
                ├── index.ts
            └── info/
                ├── GeneralInfoSection.tsx
            └── input/
                ├── ImageUploader.tsx
            └── inputs/
                ├── Chips.tsx
                ├── Dropdown.tsx
                ├── Keyboard.tsx
                ├── Search.tsx
                ├── SearchForm.tsx
                ├── index.ts
            └── interaction/
                ├── CreateMealButton.tsx
                ├── FilterButton.tsx
            └── meal/
                ├── InstructionsSection.tsx
            └── meal-tracker/
                ├── MealSlotItem.tsx
                ├── MealSlotsList.tsx
            └── menu/
                ├── MenuBar.tsx
                ├── MenuItem.tsx
                ├── index.ts
                └── items/
                    ├── AnalyticsMenuItem.tsx
                    ├── AssistantMenuItem.tsx
                    ├── MealMenuItem.tsx
                    ├── PlanMenuItem.tsx
                    ├── ProgressMenuItem.tsx
                    ├── index.ts
            └── navigation/
                ├── BottomBarButtonAction.tsx
                ├── CategoryMenu.tsx
                ├── HorizontalTab.tsx
                ├── PagingHorizontalTab.tsx
                ├── SegmentedTabButtons.tsx
                ├── TopBar.tsx
                ├── index.ts
            └── nutrition/
                ├── CalorieCircle.tsx
                ├── FoodEmoji.tsx
                ├── FoodName.tsx
                ├── NutrientRow.tsx
                ├── index.ts
            └── onboarding/
                ├── AgeSelector.backup.tsx
                ├── AgeSelector.tsx
                ├── CurrentWeightSelector.tsx
                ├── HeightSelector.tsx
                ├── NameInput.tsx
                ├── SimpleAgeSelector.tsx
                ├── TargetWeightSelector.tsx
                ├── TimeSelector.tsx
            └── scan/
                ├── CircleProgress.tsx
                ├── ProductDetails.tsx
                ├── ScanHistory.tsx
                ├── ScanResultCard.tsx
            └── search/
                ├── SearchBarWithFilter.tsx
                ├── SearchBarWithScanner.tsx
            └── selectors/
                ├── CuisineSelector.tsx
                ├── MealTypeSelector.tsx
            └── tracking/
                ├── CircularNutritionProgress.tsx
                ├── CircularProgressBase.tsx
                ├── CustomizeCupSize.tsx
                ├── DrinkTypeSelector.tsx
                ├── FoodDetails.tsx
                ├── FoodList.tsx
                ├── HistoryEmpty.tsx
                ├── HistoryList.tsx
                ├── IngredientListItem.tsx
                ├── MealListItem.tsx
                ├── MealNutritionalValues.tsx
                ├── QuantitySelector.tsx
                ├── StepCounter.tsx
                ├── StepsHistoryList.tsx
                ├── WaterDropSVG.tsx
                ├── WaterIntake.tsx
                ├── index.ts
                ├── types.ts
            └── water-tracker/
                ├── index.ts
        └── organisms/
            └── DeleteDrawer/
                ├── CancelButton.tsx
                ├── DeleteButton.tsx
                ├── DeleteConfirmationDrawer.tsx
            ├── MenuBar.tsx
            ├── Navbar.tsx
            ├── index.ts
            └── calorie-tracker/
                ├── CalorieTracker.tsx
            └── layout/
                ├── FooterWithNavigation.tsx
                ├── HeaderWithSafeArea.tsx
                ├── index.ts
            └── meal/
                ├── CameraView.tsx
                ├── IngredientDetails.tsx
                ├── IngredientDetailsRow.tsx
                ├── IngredientListDrawer.tsx
                ├── IngredientsList.tsx
                ├── MealDetailHeader.tsx
                ├── MealFormNew.tsx
                ├── OpenFoodSearchCard.tsx
                ├── ScanResultCard.tsx
            └── navigation/
                ├── BottomNavigation.tsx
                ├── HeaderBar.tsx
                ├── index.ts
            └── plan/
                ├── CreatePlanButton.tsx
                ├── MenuItemPlan.tsx
                ├── PlanCardNew.tsx
                ├── PlanDetailHeader.tsx
                ├── PlanOptionsDrawer.tsx
                ├── SearchPlanNew.tsx
            └── scan/
                ├── ScanOverlay.tsx
        └── screens/
            ├── ScannerScreen.tsx
        └── templates/
            ├── AuthLayout.tsx
            ├── DetailLayout.tsx
            ├── FormLayout.tsx
            ├── MainLayout.tsx
            ├── TestLayout.tsx
            ├── index.ts
        └── toast/
            ├── index.tsx
└── convex/
    ├── auth.config.ts
    ├── http.ts
    ├── schema.ts
    ├── users.ts
    └── _generated/
        ├── api.d.ts
        ├── dataModel.d.ts
        ├── server.d.ts
└── db/
    ├── Condiments-et-sauces.ts
    ├── Céréales-et-Pâtes.ts
    ├── Fruits-et-jus-de-fruits.ts
    ├── Graines-oléagineuses.ts
    ├── Huiles-et-corps-gras.ts
    ├── Lait-et-dérivés.ts
    ├── Légumes-frais-et-transformés.ts
    ├── Légumes-secs.ts
    ├── Oeufs.ts
    ├── Poissons-et-fruits-de-mer.ts
    ├── Sucre-et-produits-sucrés.ts
    ├── Thé-café-et-eau.ts
    ├── Viandes-et-abats.ts
    ├── Volailles.ts
    ├── addDummyData.ts
    ├── ingredientImages.ts
    ├── pomme-de-terre.ts
    ├── schema.ts
    ├── seeds.ts
└── hooks/
    ├── useAppState.ts
    ├── useColorScheme.ts
    ├── useColorScheme.web.ts
    ├── useCookingMethodAdjustment.ts
    ├── useGemini.ts
    ├── useMealFilters.ts
    ├── useMealList.ts
    ├── useNutritionCalculation.ts
    ├── useOnlineManager.ts
    ├── useRefreshOnFocus.ts
    ├── useThemeColor.ts
    └── ia/
        ├── useMealGeneration.ts
        ├── useMealGeneratorForm.ts
        ├── useMissingIngredients.ts
        ├── usePlanGeneration.ts
        ├── usePlanGeneratorForm.ts
        ├── useUiState.ts
        └── voice/
            ├── index.ts
            ├── useIAVoice.ts
            ├── useTTS.ts
└── i18n/
    ├── index.ts
└── scripts/
    ├── generateIngredientImages.ts
└── themeNew/
    ├── colors.ts
    ├── index.ts
    ├── radii.ts
    ├── shadows.ts
    ├── spacing.ts
    ├── typography-playfair.ts
    ├── typography-roboto.ts
    ├── typography-urbanist.ts
└── types/
    ├── food-item.type.ts
    ├── index.ts
    ├── ingredient.type.ts
    ├── meal.type.ts
    ├── nutrition-advice.type.ts
    ├── nutrition.type.ts
    ├── plan.type.ts
    ├── react-native-liquid-progress.d.ts
    ├── scanhistory.types.ts
    ├── scanner.types.ts
    ├── session.type.ts
    ├── user.type.ts
└── utils/
    ├── getImageUrl.ts
    ├── resolveStaticImage.ts
    ├── utils.ts
    └── adapters/
        ├── storage-adapter.ts
    └── api/
        ├── OpenFoodFactsService.ts
        └── adapters/
            ├── api-adapter.ts
            ├── gemini-adapter.ts
            ├── openfoodfacts-adapter.ts
        └── interfaces/
            ├── version.ts
    └── cache/
        ├── react-query-config.ts
    └── config/
        ├── reanimated-config.ts
    └── constants/
        ├── Colors.ts
        ├── Config.ts
        ├── CookingConstants.ts
        ├── NutritionConstants.ts
        ├── NutritionLimits.ts
        ├── NutritionUnits.ts
        ├── constant.ts
        ├── cooking-method-info.constants.ts
        ├── flags.ts
        ├── icons.ts
        ├── images.ts
        ├── nutrition-constants.ts
        ├── ui-constants.ts
    └── context/
        ├── DarkModeContext.ts
    └── engines/
        ├── nutrition-engine.ts
    └── enum/
        ├── cache.enum.ts
        ├── general.enum.ts
        ├── logging.enum.ts
        ├── meal.enum.ts
        ├── nutrition.enum.ts
        ├── user-details.enum.ts
        ├── user-gender-activity.enum.ts
    └── helpers/
        ├── cacheConfig.ts
        ├── calorieEquivalence.helper.ts
        ├── cookingAdjustment.helper.ts
        ├── date-utils.ts
        ├── format.helper.ts
        ├── macroBalance.helper.ts
        ├── nutrition.helper.ts
        ├── nutritionConverter.helper.ts
        ├── precision.helper.ts
        ├── prefetchData.ts
        ├── queryClient.ts
        ├── queryInvalidation.ts
        ├── queryKeys.ts
        ├── uniqueId.ts
        ├── userContext.ts
    └── hoc/
        ├── index.ts
        ├── withQueryState.tsx
    └── hooks/
        ├── index.ts
        ├── useDarkMode.ts
        ├── usePaginatedList.ts
        ├── useServiceQuery.ts
        └── mutations/
            ├── useMarkMealAsConsumed.ts
            ├── useRemoveMealFromDailyPlan.ts
        └── queries/
            ├── useDailyNutrition.ts
            ├── useMealsBySlot.ts
            ├── usePlanDetails.ts
    └── interfaces/
        ├── auth.interface.ts
        ├── drawer.interface.ts
        ├── form-input.interface.ts
        ├── forms.interface.ts
        ├── modals.interface.ts
        ├── nutrition-progress.interface.ts
        ├── pages-services.interface.ts
        ├── pages.interface.ts
        ├── ui-services.interface.ts
    └── mcp/
        ├── sqlite-server.ts
        └── handlers/
            ├── ia-handlers.ts
            ├── ingredient-handlers.ts
            ├── ingredient-suggestion-handlers.ts
            ├── meal-handlers.ts
            ├── nutrition-handlers.ts
            ├── plan-handlers-extension.ts
            ├── plan-handlers.ts
            ├── progress-handlers.ts
            ├── scan-history-handlers.ts
            ├── user-handlers.ts
        └── interfaces/
            ├── ia-interfaces.ts
            ├── ingredient-interfaces.ts
            ├── ingredient-suggestion-interfaces.ts
            ├── meal-interfaces.ts
            ├── nutrition-interfaces.ts
            ├── plan-interfaces.ts
            ├── progress-interfaces.ts
            ├── scan-history-interfaces.ts
            ├── user-interfaces.ts
    └── providers/
        ├── DrizzleProvider.tsx
        ├── MCPProvider.tsx
        ├── ModalProvider.tsx
        ├── QueryWrapper.tsx
        ├── ThemeProvider.tsx
        ├── UserContextProvider.tsx
    └── services/
        └── api/
            ├── mealGenerationApi.service.ts
            ├── missingIngredientApi.service.ts
            ├── planGenerationApi.service.ts
        └── common/
            ├── external-api.service.ts
            ├── logging.service.ts
            ├── meals-company-style.service.ts
            ├── scanner.service.ts
        └── core/
            ├── analytics-core.service.ts
            ├── assistant-core.service.ts
            ├── auth-core.service.ts
            ├── cooking-method-core.service.ts
            ├── gemini-core.service.ts
            ├── ingredient-core.service.ts
            ├── ingredient-suggestion-core.service.ts
            ├── meal-core.service.ts
            ├── nutrition-core.service.ts
            ├── onboarding.service.ts
            ├── plan-core.service.ts
            ├── progress-core.service.ts
            ├── scan-history-core.service.ts
            ├── scanner-core.service.ts
            ├── user-core.service.ts
        └── forms/
            ├── form-calories-intake.service.ts
            ├── form-duration.service.ts
            ├── form-gender.service.ts
            ├── form-goal.service.ts
            ├── form-input.service.ts
            ├── form-meal.service.ts
            ├── form-nutrition-goal.service.ts
            ├── form-physical-activity.service.ts
            ├── form-user-details.service.ts
            ├── form-user-gender-activity.service.ts
            ├── form-user-profile.service.ts
        └── ia/
            ├── error.service.ts
            ├── errorHandler.ts
            ├── fallbackHandler.ts
            ├── ia.service.ts
            ├── iaActions.ts
            ├── iaService.ts
            ├── iaVoiceService.ts
            ├── loggingEnhancer.ts
            ├── promptBuilder.ts
            ├── responseParser.ts
            ├── responseValidation.ts
            ├── retryUtils.ts
            └── providers/
                ├── geminiProvider.ts
                ├── iaProvider.interface.ts
                ├── iaProviderFactory.ts
            └── speech/
                ├── index.ts
                ├── tts.service.ts
        └── pages/
            ├── analytics-pages.service.ts
            ├── assistant-pages.service.ts
            ├── auth-pages.service.ts
            ├── auth-registration.service.ts
            ├── cooking-method-pages.service.ts
            ├── ingredient-pages.service.ts
            ├── meal-pages.service.ts
            ├── nutrition-pages.service.ts
            ├── onboarding-pages.service.ts
            ├── plan-pages.service.ts
            ├── progress-pages.service.ts
            ├── scan-pages.service.ts
            ├── scanner-pages.service.ts
            ├── user-pages.service.ts
        └── ui/
            ├── cooking-method-ui.service.ts
            ├── deletion-modal-ui.service.ts
            ├── drawer-ui.service.ts
            ├── forget-password-modal-ui.service.ts
            ├── formatting-ui.service.ts
            ├── general-settings-drawer-ui.service.ts
            ├── ingredient-drawer-ui.service.ts
            ├── ingredient-ui.service.ts
            ├── meal-drawer-ui.service.ts
            ├── meal-options-modal-ui.service.ts
            ├── nutrition-ui.service.ts
            ├── options-drawer-ui.service.ts
            ├── preferences-ui.service.ts
            ├── user-settings-drawer-ui.service.ts
            ├── weight-input-ui.service.ts
        └── user/
            ├── user-profile-validator.service.ts
    └── store/
        ├── ingredientStore.ts
        ├── planStore.ts
        ├── progressStore.ts
        ├── sessionStore.ts
    └── transformers/
        ├── ia-data.transformer.ts
    └── types/
        ├── user.ts
    └── validation/
        └── auth/
            ├── forget-schema.validation.ts
            ├── login-schema.validation.ts
            ├── new-password-schema.validation.ts
            ├── password-schema.validation.ts
            ├── register-schema.validation.ts
            ├── reset-password-schema.validation.ts
        └── ia/
            ├── ia.schemas.ts
            ├── mealGeneratorForm.schema.ts
            ├── planGeneratorForm.schema.ts
        └── meal/
            ├── meal-schema.validation.ts
            ├── meal.validation.ts
        └── plan/
            ├── calculate-calories-intake.validation.ts
            ├── nutrition-goal.validation.ts
            ├── plan.validation.ts
        └── user/
            ├── user-details.validation.ts
            ├── user-gender-activity.validation.ts
            ├── user-profile.validation.ts